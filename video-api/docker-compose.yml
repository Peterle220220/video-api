services:
  # Video API Application
  api:
    build: .
    container_name: video_api_app
    environment:
      - NODE_ENV=development
      - PORT=3000
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_EXPIRES_IN=24h
      - UPLOAD_PATH=./uploads
      - PROCESSED_PATH=./processed
      - MAX_FILE_SIZE=500MB
      - CPU_MONITORING_INTERVAL=1000
      - FFMPEG_THREADS=2
      - FFMPEG_PRESET=fast
      - FFMPEG_CRF=22
      - FFMPEG_FPS=30
      - DEFAULT_RESOLUTIONS=["1280x720","854x480"]
      - ASSEMBLYAI_API_KEY=f0f4e03646a543b4bc994995021222b0
    ports:
      - "3000:3000"
    volumes:
      - ./uploads:/app/uploads
      - ./processed:/app/processed
    depends_on: {}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'node -e "require(''http'').get(''http://localhost:3000/health'', r => process.exit(r.statusCode===200?0:1))" ',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Load generator using k6 to drive CPU test for 5 minutes
  load:
    image: grafana/k6:0.49.0
    container_name: video_api_load
    depends_on:
      api:
        condition: service_healthy
    environment:
      - K6_OUT=csv=/scripts/k6_results.csv
      - API_BASE=http://api:3000
      - AUTH_TOKEN=REPLACE_WITH_YOUR_TOKEN
      - TEST_DURATION=5m
      - VUS=25
    volumes:
      - ./scripts:/scripts
    entrypoint: ["k6", "run", "/scripts/test-cpu.js"]

  # Dockerized encoder load (no Node) that uploads sample.mp4 repeatedly for 5 minutes
  load-encode:
    image: alpine:3.19
    container_name: video_api_encode_load
    depends_on:
      api:
        condition: service_healthy
    environment:
      - API_BASE=http://api:3000
      - USERNAME=admin
      - PASSWORD=admin123
      - MINUTES=5
      - VUS=4
      - SLEEP_BETWEEN=1
      - VIDEO_PATH=/app/sample.mp4
    volumes:
      - ./scripts:/scripts:ro
      - ./sample.mp4:/app/sample.mp4:ro
    entrypoint: ["/bin/sh","-c","apk add --no-cache bash jq curl > /dev/null && bash /scripts/cpu-load.sh --mode transcode --heavy --api-base ${API_BASE} --user ${USERNAME} --pass ${PASSWORD} --minutes ${MINUTES} --vus ${VUS} --sleep ${SLEEP_BETWEEN} --video ${VIDEO_PATH}"]

volumes: {}
